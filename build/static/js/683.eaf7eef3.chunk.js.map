{"version":3,"file":"static/js/683.eaf7eef3.chunk.js","mappings":"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","sources":["pages/presentation/year/Edit.tsx"],"sourcesContent":["import React, {useCallback, useState} from 'react';\nimport { FormikHelpers, useFormik } from 'formik';\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../components/bootstrap/forms/Input';\nimport Select from '../../../components/bootstrap/forms/Select';\nimport Textarea from '../../../components/bootstrap/forms/Textarea';\nimport api from '../../../services/api';\nimport SubHeader, {\n    SubHeaderLeft,\n    SubHeaderRight\n} from '../../../layout/SubHeader/SubHeader';\nimport Button from \"../../../components/bootstrap/Button\";\nimport moment from 'moment';\nimport Card, {CardHeader, CardLabel, CardBody, CardTitle} from \"../../../components/bootstrap/Card\";\nimport {dashboardPagesMaster} from \"../../../menu\";\nimport PageWrapper from \"../../../layout/PageWrapper/PageWrapper\";\nimport Page from \"../../../layout/Page/Page\";\nimport Breadcrumb from \"../../../components/bootstrap/Breadcrumb\";\nimport showNotification from \"../../../components/extras/showNotification\";\nimport Spinner from \"../../../components/bootstrap/Spinner\";\nimport {useNavigate} from \"react-router-dom\";\n\ninterface IValuesForm {\n    name: string;\n    description: string;\n    date_start: string;\n    date_end: string;\n    awards: any;\n}\nconst Edit = () => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const navigate = useNavigate();\n    const formikAward = useFormik({\n        onSubmit<Values>(\n            values: Values,\n            formikHelpers: FormikHelpers<Values>,\n        ): void | Promise<any> {\n            return undefined;\n        },\n        initialValues: {\n            'description': '',\n            'kms': 0,\n            'sex': 'M',\n            'gift': ''\n        },\n    });\n\n    const formik = useFormik({\n        onSubmit<IValuesForm>(\n            values: IValuesForm,\n            formikHelpers: FormikHelpers<IValuesForm>,\n        ): void | Promise<any> {\n            setIsLoading(true);\n            api.post('year-edition/save', {...values}).then(resp => {\n                setIsLoading(false);\n                if (resp.data.error) {\n                    return showNotification('Atenção!', resp.data.message, 'warning');\n                }\n                showNotification('Sucesso!', resp.data.message, 'success');\n                return navigate('/')\n            })\n\n        },\n        initialValues: {\n            name: 'KM Vantagens 2023',\n            description: 'Exercise Bike',\n            date_start: moment().add(1, 'days').format('YYYY-MM-DD'),\n            date_end: moment().add(1, 'days').format('YYYY-MM-DD'),\n            awards: []\n        },\n    });\n\n    const pushAward = useCallback(\n        () => {\n            if (formikAward.values.gift === '' || formikAward.values.kms <= 0 || formikAward.values.sex === '' || formikAward.values.description === '') {\n                return showNotification('Atenção!', 'Informe todos os dados.', 'warning');\n            }\n            let arr = [...formik.values.awards, formikAward.values];\n            formik.setFieldValue('awards', arr)\n        },\n        [formikAward, formik],\n    );\n\n\n    return (\n        <PageWrapper title={dashboardPagesMaster.year.subMenu.edit.text}>\n            <SubHeader>\n                <SubHeaderLeft>\n                    <Breadcrumb\n                        list={[\n                            { title: dashboardPagesMaster.year.subMenu.list.text, to: dashboardPagesMaster.year.subMenu.list.path },\n                            { title: dashboardPagesMaster.year.subMenu.edit.text, to: dashboardPagesMaster.year.subMenu.edit.path },\n                        ]}\n                    />\n                </SubHeaderLeft>\n                <SubHeaderRight>\n                    <Button\n                        color='success'\n                        isOutline\n                        icon='Save'\n                        isDisable={isLoading}\n                        onClick={formik.handleSubmit}>\n                        {isLoading && (\n                            <Spinner isSmall inButton isGrow />\n                        )}\n                        Salvar\n                    </Button>\n                </SubHeaderRight>\n            </SubHeader>\n\n            <Page>\n                <Card isCompact className='mb-0'>\n                    <CardHeader>\n                        <CardLabel icon={dashboardPagesMaster.year.icon} iconColor='success'>\n                            <CardTitle>Edição</CardTitle>\n                        </CardLabel>\n                    </CardHeader>\n                    <CardBody>\n                        <div className='row g-4'>\n                            <div className='col-4'>\n                                <FormGroup id='name' label='Nome' isFloating>\n                                    <Input\n                                        placeholder='Nome'\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className='col-4'>\n                                <FormGroup id='date_start' label='Date' isFloating>\n                                    <Input\n                                        placeholder='Date'\n                                        onChange={formik.handleChange}\n                                        value={formik.values.date_start}\n                                        type='date'\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className='col-4'>\n                                <FormGroup id='date_end' label='Date' isFloating>\n                                    <Input\n                                        placeholder='Date'\n                                        onChange={formik.handleChange}\n                                        value={formik.values.date_end}\n                                        type='date'\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className='col-12'>\n                                <FormGroup id='description' label='Descrição' isFloating>\n                                    <Textarea\n                                        placeholder='Descrição'\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description}\n                                    />\n                                </FormGroup>\n                            </div>\n\n                            <div className='col-12'>\n                                <Card isCompact className='mb-0'>\n                                    <CardHeader>\n                                        <CardLabel icon='EmojiEvents' iconColor='success'>\n                                            <CardTitle>Premiações e metas</CardTitle>\n                                        </CardLabel>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <div className='row g-4'>\n                                            <div className='col-4'>\n                                                <FormGroup id='sex' label='Sexo' isFloating>\n                                                    <Select\n                                                        ariaLabel='Sexo'\n                                                        placeholder='Sexo'\n                                                        onChange={formikAward.handleChange}\n                                                        value={formikAward.values.sex}\n                                                        list={[{ value: 'M', text: 'Masc' },{ value: 'F', text: 'Fem' }]}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className='col-4'>\n                                                <FormGroup id='description' label='Descrição' isFloating>\n                                                    <Input\n                                                        placeholder='Descrição'\n                                                        onChange={formikAward.handleChange}\n                                                        value={formikAward.values.description}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className='col-4'>\n                                                <FormGroup id='kms' label='Kms / Pontos' isFloating>\n                                                    <Input\n                                                        placeholder='Kms / Pontos'\n                                                        onChange={formikAward.handleChange}\n                                                        value={formikAward.values.kms}\n                                                        type='number'\n                                                    />\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className='col-4'>\n                                                <FormGroup id='gift' label='Prêmio' isFloating>\n                                                    <Input\n                                                        placeholder='Prêmio'\n                                                        onChange={formikAward.handleChange}\n                                                        value={formikAward.values.gift}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className='col-4'>\n                                                <Button color='success' icon='ExposurePlus1'\n                                                        onClick={ pushAward }>\n                                                    Adicionar\n                                                </Button>\n                                            </div>\n\n                                            <div className='col-12'>\n                                                <table className='table table-modern table-hover'>\n                                                    <thead>\n                                                    <tr>\n                                                        <th scope='col'>Descrição</th>\n                                                        <th scope='col'>Sexo</th>\n                                                        <th scope='col'>KMs</th>\n                                                        <th scope='col'>Prêmio</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {formik.values.awards.map((i: any, key: number) => (\n                                                        <tr key={key}>\n                                                            <th scope='row'>{i.description}</th>\n                                                            <th scope='row'>{i.sex == 'M' ? 'Masc' : 'Fem'}</th>\n                                                            <th scope='row'>{i.kms}</th>\n                                                            <th scope='row'>{i.gift}</th>\n                                                        </tr>\n                                                    ))}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Page>\n        </PageWrapper>\n    );\n};\n\nexport default Edit;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","navigate","useNavigate","formikAward","useFormik","onSubmit","values","formikHelpers","initialValues","formik","api","_objectSpread","then","resp","data","error","showNotification","message","name","description","date_start","moment","add","format","date_end","awards","pushAward","useCallback","gift","kms","sex","arr","concat","_toConsumableArray","setFieldValue","_jsxs","PageWrapper","title","dashboardPagesMaster","children","SubHeader","_jsx","SubHeaderLeft","Breadcrumb","list","to","SubHeaderRight","Button","color","isOutline","icon","isDisable","onClick","handleSubmit","Spinner","isSmall","inButton","isGrow","Page","Card","isCompact","className","CardHeader","CardLabel","iconColor","CardTitle","CardBody","FormGroup","id","label","isFloating","Input","placeholder","onChange","handleChange","value","type","Textarea","Select","ariaLabel","text","scope","map","i","key"],"sourceRoot":""}